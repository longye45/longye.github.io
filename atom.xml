<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ly随笔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://longye45.github.io/"/>
  <updated>2017-12-04T07:09:31.277Z</updated>
  <id>https://longye45.github.io/</id>
  
  <author>
    <name>longye45</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>国密算法SM3的Java与JavaScript实现</title>
    <link href="https://longye45.github.io/2017/12/04/%E5%9B%BD%E5%AF%86%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E7%9A%84Java%E4%B8%8EJavaScript%E5%AE%9E%E7%8E%B0/"/>
    <id>https://longye45.github.io/2017/12/04/国密加密算法的Java与JavaScript实现/</id>
    <published>2017-12-04T01:29:37.428Z</published>
    <updated>2017-12-04T07:09:31.277Z</updated>
    
    <content type="html"><![CDATA[<p>#前言<br><em>最近项目中需要对数据进行加密处理，由于项目的特殊性要求，加密统一采用国密算法进行加密。网上对国密算法的资料有限，且没有找到对应的JavaScript加密代码，无奈之下只得自己实现。加密的算法文档在<a href="http://www.oscca.gov.cn/sca/index.shtml" target="_blank" rel="external">国家密码管理局</a>官网上可以查找到，此次的算法实现仅限于SM3与SM4的代码实现，SM2由于项目未做特殊要求因此还未来得及实现。</em></p><p>#<a href="https://github.com/longye45/encrpt" target="_blank" rel="external">SM3加密的实现</a></p><p>##SM3密码杂凑算法简介</p><blockquote><p>SM3算法是一种验证签名类算法，类似于<a href="https://baike.baidu.com/item/MD5/212708?fr=aladdin" target="_blank" rel="external">MD5</a>或<a href="https://baike.baidu.com/item/SHA1" target="_blank" rel="external">SHA1</a>等算法,适用于商用密码应用中的数字签名和验证、消息认证码的生成与验证以及随机数的生成， 可满足多种密码应用的安全需求。</p><p>##SM3杂凑过程<br><strong>1.数据填充</strong><br>将原数据二进制进行填充，填充后的消息m′ 的比特长度为512的倍数。<br><strong>2.消息扩展</strong><br>将填充后的消息m′按512比特进行分组,将每组消息分组B(i)按一定方法扩展生成132个字，每个字为四个字节。<br><strong>3.迭代压缩</strong><br>按照一定规律进行64次迭代压缩，压缩后的值存入8个字节寄存器里面。<br><strong>4得到杂凑值</strong><br>最终计算出256位杂凑值</p><p>##SM3代码实现过程</p><p>##java中的SM3实现<br>代码中 <strong>getEncrpResult（）</strong> 方法是获取杂凑值的方法，方法的返回值是一个整型数组，大部分的杂凑值为了便于查看与比较，通常采用十六进制的字符串进行表示，本类也同样提供实现方法，实现方法是 <strong>getStringEncrpResult（）</strong> 。其他方法均为以上方法的子方法，由于设计较为底层的算法故不加赘述，具体请参照官方算法说明文档。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] getEncrpResult()</div><div class="line">    &#123;</div><div class="line">        fillBinDatas();<span class="comment">// 填充</span></div><div class="line">        ExtendedPacket();<span class="comment">// 扩展</span></div><div class="line">        IterationMethod();<span class="comment">// 迭代压缩</span></div><div class="line">        System.out.println();</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getStringEncrpResult</span><span class="params">()</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">int</span>[] rs = getEncrpResult();</div><div class="line">    String string = <span class="string">""</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rs.length; i++)</div><div class="line">    &#123;</div><div class="line">        string += Integer.toHexString(rs[i]) + <span class="string">" "</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> string;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>##JavaScript中的SM3实现<br>由于Java代码的完成时间较早，JavaScript的实现代码是从Java代码移植过来的，方法命名大同小异，因此不加赘述。加密方法为 <strong>getEncrpResult（）</strong> 和 <strong>getStringEncrpResult（）</strong> 。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">me.getEncrpResult = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        me.init();</div><div class="line">        fillBinDatas();<span class="comment">// 填充</span></div><div class="line">        ExtendedPacket();<span class="comment">// 扩展</span></div><div class="line">        IterationMethod();<span class="comment">// 迭代压缩</span></div><div class="line">        <span class="keyword">return</span> me.result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">me.getStringEncrpResult = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">var</span> rs = me.getEncrpResult();</div><div class="line">        <span class="keyword">var</span> string = <span class="string">""</span>;</div><div class="line">        <span class="keyword">var</span> res = <span class="keyword">new</span> <span class="built_in">Uint32Array</span>(me.result.length);</div><div class="line">        copyArray(rs, <span class="number">0</span>, res, <span class="number">0</span>, rs.length);</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; rs.length; i++)</div><div class="line">        &#123;</div><div class="line">            string += res[i].toString(<span class="number">16</span>) + <span class="string">" "</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> string;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>#SM3加密的使用方法</p><p>##SM3加密的Java使用<br>本人水平有限无法熟练处理线程安全问题，为了稳定运行只能牺牲性能采用实例化后调用的方式进行。由于底层计算都是位运算实际使用情况尚可，以下是在Java中的使用方式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">SM3Encrp sm3 = <span class="keyword">new</span> SM3Encrp(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, (<span class="keyword">byte</span>) <span class="number">0xff</span> &#125;);</div><div class="line">String sm3Code = s.getStringEncrpResult();</div></pre></td></tr></table></figure></p><p>除了以上构造方法，还提供输入流和字符串的构造方法重载，基本上满足了项目中的使用。</p><p>##SM3加密的JavaScript使用<br>由于前台多是处理字符串和二进制数据，故统一采用传递二进制的方式进行杂凑计算。如果又字符串杂凑的必要可以调用以下方法转换为二进制byte数组进行使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 字符串转byte数组</span></div><div class="line"><span class="comment"> * </span></div><div class="line"><span class="comment"> * @param &#123;*字符串&#125;</span></div><div class="line"><span class="comment"> *            str</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">stringToByte</span>(<span class="params">str</span>)</span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">    <span class="keyword">var</span> bytes = <span class="keyword">new</span> <span class="built_in">Array</span>();</div><div class="line">    <span class="keyword">var</span> len, c;</div><div class="line">    len = str.length;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++)</div><div class="line">    &#123;</div><div class="line">        c = str.charCodeAt(i);</div><div class="line">        <span class="keyword">if</span> (c &gt;= <span class="number">0x010000</span> &amp;&amp; c &lt;= <span class="number">0x10FFFF</span>)</div><div class="line">        &#123;</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x07</span>) | <span class="number">0xF0</span>);</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">            bytes.push((c &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="number">0x000800</span> &amp;&amp; c &lt;= <span class="number">0x00FFFF</span>)</div><div class="line">        &#123;</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x0F</span>) | <span class="number">0xE0</span>);</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">            bytes.push((c &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (c &gt;= <span class="number">0x000080</span> &amp;&amp; c &lt;= <span class="number">0x0007FF</span>)</div><div class="line">        &#123;</div><div class="line">            bytes.push(((c &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x1F</span>) | <span class="number">0xC0</span>);</div><div class="line">            bytes.push((c &amp; <span class="number">0x3F</span>) | <span class="number">0x80</span>);</div><div class="line">        &#125; <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            bytes.push(c &amp; <span class="number">0xFF</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> bytes;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>完整的使用过程如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sm = <span class="keyword">new</span> SM3Entrpt([<span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>,</div><div class="line"><span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>,</div><div class="line"> <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>,</div><div class="line"> <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>,</div><div class="line"> <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>,</div><div class="line"> <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>,</div><div class="line"> <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>]);</div><div class="line"> <span class="keyword">var</span> result = sm.getStringEncrpResult();</div></pre></td></tr></table></figure></p><p>如果要求字符串的杂凑值，使用方法如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> str = <span class="string">"测试代码"</span>;</div><div class="line"><span class="keyword">var</span> sm = <span class="keyword">new</span> SM3Entrpt(stringToByte(str));</div><div class="line"><span class="keyword">var</span> result = sm.getStringEncrpResult();</div></pre></td></tr></table></figure></p><p>#小结</p><blockquote><p>九层之台起于累土，<br>千里之行始于足下。</p></blockquote><p>愿别人的收获中也有属于自己的耕耘。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#前言&lt;br&gt;&lt;em&gt;最近项目中需要对数据进行加密处理，由于项目的特殊性要求，加密统一采用国密算法进行加密。网上对国密算法的资料有限，且没有找到对应的JavaScript加密代码，无奈之下只得自己实现。加密的算法文档在&lt;a href=&quot;http://www.oscca.go
      
    
    </summary>
    
      <category term="算法编程" scheme="https://longye45.github.io/categories/%E7%AE%97%E6%B3%95%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="加密" scheme="https://longye45.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
      <category term="Java" scheme="https://longye45.github.io/tags/Java/"/>
    
      <category term="JavaScript" scheme="https://longye45.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://longye45.github.io/2017/10/29/test/"/>
    <id>https://longye45.github.io/2017/10/29/test/</id>
    <published>2017-10-29T15:25:41.000Z</published>
    <updated>2017-10-30T03:07:59.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试以下"><a href="#测试以下" class="headerlink" title="测试以下"></a>测试以下</h1><p>这是一篇测试文档<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;测试以下&quot;&gt;&lt;a href=&quot;#测试以下&quot; class=&quot;headerlink&quot; title=&quot;测试以下&quot;&gt;&lt;/a&gt;测试以下&lt;/h1&gt;&lt;p&gt;这是一篇测试文档&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://longye45.github.io/2017/10/29/hello-world/"/>
    <id>https://longye45.github.io/2017/10/29/hello-world/</id>
    <published>2017-10-29T11:48:48.211Z</published>
    <updated>2017-10-30T12:11:37.232Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="hello" scheme="https://longye45.github.io/categories/hello/"/>
    
    
      <category term="test" scheme="https://longye45.github.io/tags/test/"/>
    
  </entry>
  
</feed>
